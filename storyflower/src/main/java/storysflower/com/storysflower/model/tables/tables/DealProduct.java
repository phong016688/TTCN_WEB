/*
 * This file is generated by jOOQ.
 */
package storysflower.com.storysflower.model.tables.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import storysflower.com.storysflower.model.tables.Indexes;
import storysflower.com.storysflower.model.tables.Keys;
import storysflower.com.storysflower.model.tables.Public;
import storysflower.com.storysflower.model.tables.tables.records.DealProductRecord;


/**
 * deal product table
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DealProduct extends TableImpl<DealProductRecord> {

    private static final long serialVersionUID = -75167409;

    /**
     * The reference instance of <code>public.deal_product</code>
     */
    public static final DealProduct DEAL_PRODUCT = new DealProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DealProductRecord> getRecordType() {
        return DealProductRecord.class;
    }

    /**
     * The column <code>public.deal_product.id</code>.
     */
    public final TableField<DealProductRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('deal_product_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.deal_product.product_id</code>.
     */
    public final TableField<DealProductRecord, Long> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.deal_product</code> table reference
     */
    public DealProduct() {
        this(DSL.name("deal_product"), null);
    }

    /**
     * Create an aliased <code>public.deal_product</code> table reference
     */
    public DealProduct(String alias) {
        this(DSL.name(alias), DEAL_PRODUCT);
    }

    /**
     * Create an aliased <code>public.deal_product</code> table reference
     */
    public DealProduct(Name alias) {
        this(alias, DEAL_PRODUCT);
    }

    private DealProduct(Name alias, Table<DealProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private DealProduct(Name alias, Table<DealProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("deal product table"));
    }

    public <O extends Record> DealProduct(Table<O> child, ForeignKey<O, DealProductRecord> key) {
        super(child, key, DEAL_PRODUCT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DEAL_PRODUCT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DealProductRecord, Long> getIdentity() {
        return Keys.IDENTITY_DEAL_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DealProductRecord> getPrimaryKey() {
        return Keys.DEAL_PRODUCT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DealProductRecord>> getKeys() {
        return Arrays.<UniqueKey<DealProductRecord>>asList(Keys.DEAL_PRODUCT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DealProductRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DealProductRecord, ?>>asList(Keys.DEAL_PRODUCT__FK_DEAL_PRODUCT_PRODUCT);
    }

    public Product product() {
        return new Product(this, Keys.DEAL_PRODUCT__FK_DEAL_PRODUCT_PRODUCT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DealProduct as(String alias) {
        return new DealProduct(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DealProduct as(Name alias) {
        return new DealProduct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DealProduct rename(String name) {
        return new DealProduct(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DealProduct rename(Name name) {
        return new DealProduct(name, null);
    }
}
