/*
 * This file is generated by jOOQ.
 */
package storysflower.com.storysflower.model.tables.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import storysflower.com.storysflower.model.tables.tables.Topic;


/**
 * topic table
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TopicRecord extends UpdatableRecordImpl<TopicRecord> implements Record2<Long, String> {

    private static final long serialVersionUID = -1454027922;

    /**
     * Setter for <code>public.topic.topic_id</code>.
     */
    public void setTopicId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.topic.topic_id</code>.
     */
    public Long getTopicId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.topic.topic_name</code>.
     */
    public void setTopicName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.topic.topic_name</code>.
     */
    public String getTopicName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Topic.TOPIC.TOPIC_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Topic.TOPIC.TOPIC_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getTopicId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTopicName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getTopicId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTopicName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TopicRecord value1(Long value) {
        setTopicId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TopicRecord value2(String value) {
        setTopicName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TopicRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TopicRecord
     */
    public TopicRecord() {
        super(Topic.TOPIC);
    }

    /**
     * Create a detached, initialised TopicRecord
     */
    public TopicRecord(Long topicId, String topicName) {
        super(Topic.TOPIC);

        set(0, topicId);
        set(1, topicName);
    }
}
