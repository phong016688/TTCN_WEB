/*
 * This file is generated by jOOQ.
 */
package storysflower.com.storysflower.model.tables.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import storysflower.com.storysflower.model.tables.tables.Occasion;


/**
 * occasion table
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OccasionRecord extends UpdatableRecordImpl<OccasionRecord> implements Record3<Long, String, Long> {

    private static final long serialVersionUID = 834920045;

    /**
     * Setter for <code>public.occasion.occasion_id</code>.
     */
    public void setOccasionId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.occasion.occasion_id</code>.
     */
    public Long getOccasionId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.occasion.name_occasion</code>.
     */
    public void setNameOccasion(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.occasion.name_occasion</code>.
     */
    public String getNameOccasion() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.occasion.image_id</code>.
     */
    public void setImageId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.occasion.image_id</code>.
     */
    public Long getImageId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, String, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Occasion.OCCASION.OCCASION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Occasion.OCCASION.NAME_OCCASION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Occasion.OCCASION.IMAGE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getOccasionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getNameOccasion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getImageId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getOccasionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getNameOccasion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getImageId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OccasionRecord value1(Long value) {
        setOccasionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OccasionRecord value2(String value) {
        setNameOccasion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OccasionRecord value3(Long value) {
        setImageId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OccasionRecord values(Long value1, String value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OccasionRecord
     */
    public OccasionRecord() {
        super(Occasion.OCCASION);
    }

    /**
     * Create a detached, initialised OccasionRecord
     */
    public OccasionRecord(Long occasionId, String nameOccasion, Long imageId) {
        super(Occasion.OCCASION);

        set(0, occasionId);
        set(1, nameOccasion);
        set(2, imageId);
    }
}
